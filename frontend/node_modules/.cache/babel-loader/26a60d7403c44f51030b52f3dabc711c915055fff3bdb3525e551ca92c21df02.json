{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\looptube-python\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    startNewGame();\n  }, []);\n  const startNewGame = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/new-game`);\n      setGameState(response.data);\n      setMessage('Game started! Player 1\\'s turn.');\n    } catch (error) {\n      setMessage('Error starting game');\n      console.error(error);\n    }\n  };\n  const handleCardSelect = card => {\n    setSelectedCard(card);\n  };\n  const handleAskForCards = async () => {\n    if (!selectedCard || !gameState) return;\n    try {\n      const response = await axios.post(`${API_URL}/ask-cards`, {\n        from_player: gameState.current_player,\n        to_player: 1 - gameState.current_player,\n        value: selectedCard.split(' ')[0]\n      });\n      const newState = response.data;\n      setGameState(newState);\n      if (newState.success) {\n        setMessage(`Successfully got ${newState.cards.length} card(s)!`);\n      } else {\n        setMessage('Go Fish!');\n      }\n      if (newState.sets.length > 0) {\n        setMessage(`Completed set(s) of ${newState.sets.join(', ')}!`);\n      }\n      if (newState.game_over) {\n        setMessage(`Game Over! Player ${newState.winner + 1} wins!`);\n      }\n      setSelectedCard(null);\n    } catch (error) {\n      setMessage('Error making move');\n      console.error(error);\n    }\n  };\n  const renderPlayerHand = playerIndex => {\n    if (!gameState) return null;\n    const hand = gameState[`player${playerIndex + 1}_hand`];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-hand\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Player \", playerIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: hand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${selectedCard === card ? 'selected' : ''} ${gameState.current_player === playerIndex ? 'clickable' : ''}`,\n          onClick: () => gameState.current_player === playerIndex && handleCardSelect(card),\n          children: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Go Fish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startNewGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }, this), gameState && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderPlayerHand(1), renderPlayerHand(0), selectedCard && gameState.current_player === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAskForCards,\n        children: \"Ask for Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eLSAyufn2Lj2s0CsFbz2DN4hNWk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","gameState","setGameState","selectedCard","setSelectedCard","message","setMessage","startNewGame","response","post","data","error","console","handleCardSelect","card","handleAskForCards","from_player","current_player","to_player","value","split","newState","success","cards","length","sets","join","game_over","winner","renderPlayerHand","playerIndex","hand","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/looptube-python/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(null);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    startNewGame();\r\n  }, []);\r\n\r\n  const startNewGame = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/new-game`);\r\n      setGameState(response.data);\r\n      setMessage('Game started! Player 1\\'s turn.');\r\n    } catch (error) {\r\n      setMessage('Error starting game');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleCardSelect = (card) => {\r\n    setSelectedCard(card);\r\n  };\r\n\r\n  const handleAskForCards = async () => {\r\n    if (!selectedCard || !gameState) return;\r\n\r\n    try {\r\n      const response = await axios.post(`${API_URL}/ask-cards`, {\r\n        from_player: gameState.current_player,\r\n        to_player: 1 - gameState.current_player,\r\n        value: selectedCard.split(' ')[0]\r\n      });\r\n\r\n      const newState = response.data;\r\n      setGameState(newState);\r\n\r\n      if (newState.success) {\r\n        setMessage(`Successfully got ${newState.cards.length} card(s)!`);\r\n      } else {\r\n        setMessage('Go Fish!');\r\n      }\r\n\r\n      if (newState.sets.length > 0) {\r\n        setMessage(`Completed set(s) of ${newState.sets.join(', ')}!`);\r\n      }\r\n\r\n      if (newState.game_over) {\r\n        setMessage(`Game Over! Player ${newState.winner + 1} wins!`);\r\n      }\r\n\r\n      setSelectedCard(null);\r\n    } catch (error) {\r\n      setMessage('Error making move');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const renderPlayerHand = (playerIndex) => {\r\n    if (!gameState) return null;\r\n    const hand = gameState[`player${playerIndex + 1}_hand`];\r\n    return (\r\n      <div className=\"player-hand\">\r\n        <h3>Player {playerIndex + 1}</h3>\r\n        <div className=\"cards\">\r\n          {hand.map((card, index) => (\r\n            <div\r\n              key={index}\r\n              className={`card ${selectedCard === card ? 'selected' : ''} ${\r\n                gameState.current_player === playerIndex ? 'clickable' : ''\r\n              }`}\r\n              onClick={() => gameState.current_player === playerIndex && handleCardSelect(card)}\r\n            >\r\n              {card}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Go Fish</h1>\r\n      <button onClick={startNewGame}>New Game</button>\r\n      {message && <div className=\"message\">{message}</div>}\r\n      {gameState && (\r\n        <>\r\n          {renderPlayerHand(1)}\r\n          {renderPlayerHand(0)}\r\n          {selectedCard && gameState.current_player === 0 && (\r\n            <button onClick={handleAskForCards}>Ask for Cards</button>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}